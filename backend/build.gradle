plugins {
  id 'java'
  id 'org.springframework.boot' version '3.2.4'
  id 'io.spring.dependency-management' version '1.1.4'
  id 'org.springdoc.openapi-gradle-plugin' version '1.8.0'
  id 'org.ec4j.editorconfig' version '0.1.0'
}

group = 'com.ssafy'
version = '0.0.1-SNAPSHOT'

java {
  sourceCompatibility = '21'
}

configurations {
  compileOnly {
    extendsFrom annotationProcessor
  }
}

repositories {
  mavenCentral()
}

dependencies {
  implementation 'org.springframework.boot:spring-boot-starter-actuator'
  implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
  implementation 'org.springframework.boot:spring-boot-starter-data-redis'
//    implementation 'org.springframework.boot:spring-boot-starter-pulsar'
  implementation 'org.springframework.boot:spring-boot-starter-security'
  implementation 'org.springframework.boot:spring-boot-starter-validation'
  implementation 'org.springframework.boot:spring-boot-starter-web'
  implementation 'org.springframework.boot:spring-boot-starter-websocket'
  implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
  compileOnly 'org.projectlombok:lombok'
  developmentOnly 'org.springframework.boot:spring-boot-devtools'
  runtimeOnly 'com.h2database:h2'
  runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'
  annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
  annotationProcessor 'org.projectlombok:lombok'
  testImplementation 'org.springframework.boot:spring-boot-starter-test'
  testImplementation 'org.springframework.security:spring-security-test'

  // https://github.com/querydsl/querydsl
  implementation 'com.querydsl:querydsl-jpa:5.1.0:jakarta'
  annotationProcessor 'com.querydsl:querydsl-apt:5.1.0:jakarta'
  annotationProcessor 'jakarta.annotation:jakarta.annotation-api'
  annotationProcessor 'jakarta.persistence:jakarta.persistence-api'

  // https://github.com/zalando/problem-spring-web
  implementation 'org.zalando:problem-spring-web:0.29.1'
  implementation 'org.zalando:jackson-datatype-problem:0.27.1'

  // https://github.com/jwtk/jjwt
  implementation 'io.jsonwebtoken:jjwt-api:0.12.5'
  runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.12.5'
  runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.12.5'

  // https://github.com/mapstruct/mapstruct
  implementation 'org.mapstruct:mapstruct:1.5.5.Final'
  annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final'

  // http://localhost:8080/swagger-ui/index.html
  // https://github.com/springdoc/springdoc-openapi
  implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.5.0'
  // https://springdoc.org/#javadoc-support
  annotationProcessor 'com.github.therapi:therapi-runtime-javadoc-scribe:0.15.0'
  implementation 'com.github.therapi:therapi-runtime-javadoc:0.15.0'

  // https://mvnrepository.com/artifact/software.amazon.awssdk/s3
  implementation 'software.amazon.awssdk:s3:2.+'

  // 양희승의 영역.. 야발 search는 크롤링이 안되면 화면에 데이터를 뭘 뿌려야되는지 몰라서 제가 크롤링 합니다 씨이이ㅣㅣ이ㅣㅣㅣ이이ㅏ바ㅏㄹ
  implementation 'mysql:mysql-connector-java:8.0.29'

}

tasks.named('test') {
  useJUnitPlatform()
}

// ./gradlew clean generateOpenApiDocs
tasks {
  forkedSpringBootRun {
    doNotTrackState("See https://github.com/springdoc/springdoc-openapi-gradle-plugin/issues/102")
  }
}
apply plugin: 'java'